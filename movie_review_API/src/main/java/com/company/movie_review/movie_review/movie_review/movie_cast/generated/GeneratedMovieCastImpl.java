package com.company.movie_review.movie_review.movie_review.movie_cast.generated;

import com.company.movie_review.movie_review.movie_review.movie_cast.MovieCast;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.util.OptionalUtil;

import java.util.Objects;
import java.util.Optional;
import java.util.OptionalInt;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.company.movie_review.movie_review.movie_review.movie_cast.MovieCast}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedMovieCastImpl implements MovieCast {
    
    private int id;
    private Integer movieId;
    private Integer castId;
    private String roleName;
    
    protected GeneratedMovieCastImpl() {}
    
    @Override
    public int getId() {
        return id;
    }
    
    @Override
    public OptionalInt getMovieId() {
        return OptionalUtil.ofNullable(movieId);
    }
    
    @Override
    public OptionalInt getCastId() {
        return OptionalUtil.ofNullable(castId);
    }
    
    @Override
    public Optional<String> getRoleName() {
        return Optional.ofNullable(roleName);
    }
    
    @Override
    public MovieCast setId(int id) {
        this.id = id;
        return this;
    }
    
    @Override
    public MovieCast setMovieId(Integer movieId) {
        this.movieId = movieId;
        return this;
    }
    
    @Override
    public MovieCast setCastId(Integer castId) {
        this.castId = castId;
        return this;
    }
    
    @Override
    public MovieCast setRoleName(String roleName) {
        this.roleName = roleName;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "       + Objects.toString(getId()));
        sj.add("movieId = "  + Objects.toString(OptionalUtil.unwrap(getMovieId())));
        sj.add("castId = "   + Objects.toString(OptionalUtil.unwrap(getCastId())));
        sj.add("roleName = " + Objects.toString(OptionalUtil.unwrap(getRoleName())));
        return "MovieCastImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof MovieCast)) { return false; }
        final MovieCast thatMovieCast = (MovieCast)that;
        if (this.getId() != thatMovieCast.getId()) { return false; }
        if (!Objects.equals(this.getMovieId(), thatMovieCast.getMovieId())) { return false; }
        if (!Objects.equals(this.getCastId(), thatMovieCast.getCastId())) { return false; }
        if (!Objects.equals(this.getRoleName(), thatMovieCast.getRoleName())) { return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getId());
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getMovieId()));
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getCastId()));
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getRoleName()));
        return hash;
    }
}