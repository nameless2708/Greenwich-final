package com.company.movie_review.movie_review.movie_review.movie.generated;

import com.company.movie_review.movie_review.movie_review.movie.Movie;
import com.speedment.common.annotation.GeneratedCode;
import com.speedment.runtime.core.util.OptionalUtil;

import java.util.Objects;
import java.util.Optional;
import java.util.StringJoiner;

/**
 * The generated base implementation of the {@link
 * com.company.movie_review.movie_review.movie_review.movie.Movie}-interface.
 * <p>
 * This file has been automatically generated by Speedment. Any changes made to
 * it will be overwritten.
 * 
 * @author Speedment
 */
@GeneratedCode("Speedment")
public abstract class GeneratedMovieImpl implements Movie {
    
    private int id;
    private String movieName;
    private String movieCategory;
    private String movieDescription;
    private String movieDirector;
    private String movieDuration;
    private String movieRating;
    private String movieImage;
    
    protected GeneratedMovieImpl() {}
    
    @Override
    public int getId() {
        return id;
    }
    
    @Override
    public Optional<String> getMovieName() {
        return Optional.ofNullable(movieName);
    }
    
    @Override
    public Optional<String> getMovieCategory() {
        return Optional.ofNullable(movieCategory);
    }
    
    @Override
    public Optional<String> getMovieDescription() {
        return Optional.ofNullable(movieDescription);
    }
    
    @Override
    public Optional<String> getMovieDirector() {
        return Optional.ofNullable(movieDirector);
    }
    
    @Override
    public Optional<String> getMovieDuration() {
        return Optional.ofNullable(movieDuration);
    }
    
    @Override
    public Optional<String> getMovieRating() {
        return Optional.ofNullable(movieRating);
    }
    
    @Override
    public Optional<String> getMovieImage() {
        return Optional.ofNullable(movieImage);
    }
    
    @Override
    public Movie setId(int id) {
        this.id = id;
        return this;
    }
    
    @Override
    public Movie setMovieName(String movieName) {
        this.movieName = movieName;
        return this;
    }
    
    @Override
    public Movie setMovieCategory(String movieCategory) {
        this.movieCategory = movieCategory;
        return this;
    }
    
    @Override
    public Movie setMovieDescription(String movieDescription) {
        this.movieDescription = movieDescription;
        return this;
    }
    
    @Override
    public Movie setMovieDirector(String movieDirector) {
        this.movieDirector = movieDirector;
        return this;
    }
    
    @Override
    public Movie setMovieDuration(String movieDuration) {
        this.movieDuration = movieDuration;
        return this;
    }
    
    @Override
    public Movie setMovieRating(String movieRating) {
        this.movieRating = movieRating;
        return this;
    }
    
    @Override
    public Movie setMovieImage(String movieImage) {
        this.movieImage = movieImage;
        return this;
    }
    
    @Override
    public String toString() {
        final StringJoiner sj = new StringJoiner(", ", "{ ", " }");
        sj.add("id = "               + Objects.toString(getId()));
        sj.add("movieName = "        + Objects.toString(OptionalUtil.unwrap(getMovieName())));
        sj.add("movieCategory = "    + Objects.toString(OptionalUtil.unwrap(getMovieCategory())));
        sj.add("movieDescription = " + Objects.toString(OptionalUtil.unwrap(getMovieDescription())));
        sj.add("movieDirector = "    + Objects.toString(OptionalUtil.unwrap(getMovieDirector())));
        sj.add("movieDuration = "    + Objects.toString(OptionalUtil.unwrap(getMovieDuration())));
        sj.add("movieRating = "      + Objects.toString(OptionalUtil.unwrap(getMovieRating())));
        sj.add("movieImage = "       + Objects.toString(OptionalUtil.unwrap(getMovieImage())));
        return "MovieImpl " + sj.toString();
    }
    
    @Override
    public boolean equals(Object that) {
        if (this == that) { return true; }
        if (!(that instanceof Movie)) { return false; }
        final Movie thatMovie = (Movie)that;
        if (this.getId() != thatMovie.getId()) { return false; }
        if (!Objects.equals(this.getMovieName(), thatMovie.getMovieName())) { return false; }
        if (!Objects.equals(this.getMovieCategory(), thatMovie.getMovieCategory())) { return false; }
        if (!Objects.equals(this.getMovieDescription(), thatMovie.getMovieDescription())) { return false; }
        if (!Objects.equals(this.getMovieDirector(), thatMovie.getMovieDirector())) { return false; }
        if (!Objects.equals(this.getMovieDuration(), thatMovie.getMovieDuration())) { return false; }
        if (!Objects.equals(this.getMovieRating(), thatMovie.getMovieRating())) { return false; }
        if (!Objects.equals(this.getMovieImage(), thatMovie.getMovieImage())) { return false; }
        return true;
    }
    
    @Override
    public int hashCode() {
        int hash = 7;
        hash = 31 * hash + Integer.hashCode(getId());
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getMovieName()));
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getMovieCategory()));
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getMovieDescription()));
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getMovieDirector()));
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getMovieDuration()));
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getMovieRating()));
        hash = 31 * hash + Objects.hashCode(OptionalUtil.unwrap(getMovieImage()));
        return hash;
    }
}